"""
Sistema de Gesti√≥n de Biblioteca y Usuarios

Enunciado:

Desarrolla un sistema para gestionar una biblioteca que controle usuarios, libros disponibles,
pr√©stamos activos y genere reportes. El sistema debe manejar usuarios √∫nicos, cat√°logo de libros,
historial de pr√©stamos y an√°lisis de lectores.

Requisitos T√©cnicos Espec√≠ficos:
Tipos de Datos Obligatorios:

Diccionarios: Para usuarios, libros y pr√©stamos
Conjuntos: Para g√©neros literarios, autores favoritos y libros le√≠dos
Listas: Para historial de pr√©stamos por usuario
Strings: Para datos de usuarios y libros
Enteros: Para c√≥digos de libros y contadores

Estructuras Requeridas:

Diccionario usuarios: {cedula: {"nombre", "generos_favoritos": set, "historial":[]}}
Diccionario libros: {codigo: {"titulo", "autor", "genero", "disponible": bool}}
Conjunto g√©neros: G√©neros disponibles en la biblioteca

Operadores de Conjuntos Obligatorios:

Intersecci√≥n: Para g√©neros en com√∫n entre usuarios
Diferencia sim√©trica: ^ para g√©neros √∫nicos
Subconjunto: <= para verificar preferencias
Actualizaci√≥n: .update() para agregar m√∫ltiples g√©neros

Funcionalidades Requeridas:

1. Registrar usuario: Con g√©neros favoritos
2. Agregar libro: Al cat√°logo con validaciones
3. Prestar libro: Control de disponibilidad
4. Devolver libro: Actualizar estado y historial
5. Recomendar libros: Basado en g√©neros favoritos
6. An√°lisis de usuarios: Intersecciones y estad√≠sticas
"""

import os

def clear_screen():
    os.system("cls" if os.name=="nt" else "clear")

def pause():
    input("Presione ENTER para continuar...")

def menu():
    clear_screen()
    print("SISTEMA DE GESTI√ìN DE BIBLIOTECA")
    print("-" * 50)
    print("\n~~ MEN√ö DE OPCIONES ~~\n")
    print("1. Registrar usuario")
    print("2. Agregar libro")
    print("3. Prestar libro")
    print("4. Devolver libro")
    print("5. Recomendar libros")
    print("6. An√°lisis de usuarios")
    print("0. Salir")
    option = input("\n>>> Ingrese una opci√≥n (0-6): ")
    return option


def main():
    isActive = True
    while isActive:
        try:
            clear_screen()
            choice = menu()

            match choice:
                case "1":
                    pass

                case "2":
                    pass

                case "3":
                    pass

                case "4":
                    pass

                case "5":
                    pass

                case "6":
                    pass

                case "0":
                    print("\n¬°HASTA LUEGO! üëã")
                    print("Gracias por usar el gestor de biblioteca üòä.\n")
                    isActive = False

                case _:
                    print("\nError: Debe ingresar un n√∫mero entre 0 y 6. Intente nuevamente.")
                    pause()
        except ValueError:
            print("\nError: Opci√≥n no v√°lida. Intente nuevamente.")
            pause()

if __name__ == "__main__":
    main()